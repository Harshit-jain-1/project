# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10PxcgO5FADLWop7whV-nQNxydZm18kGi
"""

! pip install streamlit

import streamlit as st
import yfinance as yf
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import load_model
import matplotlib.pyplot as plt

st.title("Stock Price Prediction")

# Load pre-trained model
model = load_model("/lstm_stock_model.h5")

# Download stock data
df = yf.download('AAPL', start='2015-01-01', end='2025-01-01')[['Close']].dropna()

# Scale data
scaler = MinMaxScaler()
scaled_data = scaler.fit_transform(df)

SEQ_LENGTH = 60

def create_sequences(data, seq_length=SEQ_LENGTH):
    X = []
    for i in range(seq_length, len(data)):
        X.append(data[i - seq_length:i, 0])
    return np.array(X)

X = create_sequences(scaled_data)
X = X.reshape((X.shape[0], X.shape[1], 1))

# Predict
predicted = model.predict(X)
predicted = scaler.inverse_transform(predicted)
actual = scaler.inverse_transform(scaled_data[SEQ_LENGTH:])

# Plot
st.subheader("Actual vs Predicted Prices")
fig, ax = plt.subplots()
ax.plot(actual, label='Actual')
ax.plot(predicted, label='Predicted')
ax.legend()
st.pyplot(fig)

